name: Consolidated API Change Scanner

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  analyze-and-scan: # Single job for all steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download last scanned commit SHA
        id: download_sha
        run: |
          gh run download --repo ${{ github.repository }} --name last-scanned-commit --dir ./last-scanned-commit || echo "No previous SHA found. This is likely the first run."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare current SHA with last scanned SHA
        id: compare_shas
        run: |
          LAST_SHA=""
          if [ -f "./last-scanned-commit/last_commit_sha.txt" ]; then
            LAST_SHA=$(cat ./last-scanned-commit/last_commit_sha.txt)
            echo "Last scanned commit SHA: $LAST_SHA"
          fi
          
          CURRENT_SHA=${{ github.sha }}
          echo "Current commit SHA: $CURRENT_SHA"

          if [ "$LAST_SHA" == "$CURRENT_SHA" ]; then
            echo "changes_found=false" >> $GITHUB_OUTPUT
            echo "âœ… No new commits. Skipping analysis and scan."
            exit 0 # Exit this step successfully, skipping subsequent steps in this job
          fi
          
          echo "changes_found=true" >> $GITHUB_OUTPUT
          echo "Changes detected. Proceeding with analysis."
          
          if [ "$LAST_SHA" != "" ]; then
            git diff --name-only $LAST_SHA HEAD > changed_files.txt
          else
            find . -name "*.java" > changed_files.txt
          fi
          
          if [ -s changed_files.txt ]; then
            echo "files_to_process=true" >> $GITHUB_OUTPUT
          else
            echo "files_to_process=false" >> $GITHUB_OUTPUT
          fi

      - name: Show Changed Files
        # This step will only run if changes were found and there are files to process
        if: steps.compare_shas.outputs.changes_found == 'true' && steps.compare_shas.outputs.files_to_process == 'true'
        run: |
          echo "--- Files to be processed ---"
          cat changed_files.txt
          echo "----------------------------"
          
      - name: Set up Python
        # This step will only run if changes were found and there are files to process
        if: steps.compare_shas.outputs.changes_found == 'true' && steps.compare_shas.outputs.files_to_process == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run Endpoint Extractor
        id: extract_endpoints
        # This step will only run if changes were found and there are files to process
        if: steps.compare_shas.outputs.changes_found == 'true' && steps.compare_shas.outputs.files_to_process == 'true'
        run: python scripts/extract_endpoints.py changed_files.txt

      - name: Setup Nuclei and Scan Endpoints
        # This step will only run if endpoints were found by the extractor
        if: steps.extract_endpoints.outputs.endpoints_found == 'true'
        run: |
          echo "âœ¨ Installing Nuclei..."
          sudo apt-get update && sudo apt-get install -y wget unzip jq
          wget -q https://github.com/projectdiscovery/nuclei/releases/download/v2.9.8/nuclei_2.9.8_linux_amd64.zip -O nuclei.zip
          unzip nuclei.zip
          sudo mv nuclei /usr/local/bin/

          echo "ðŸš€ Running Nuclei scan on detected endpoints..."
          if [ -s changed_endpoints.json ]; then
              jq -r '.[].path' changed_endpoints.json > urls_for_nuclei.txt
              #nuclei -l urls_for_nuclei.txt -silent -o nuclei_results.txt

              echo "Nuclei scan complete. Results:"
              if [ -s nuclei_results.txt ]; then
                  cat nuclei_results.txt
                  exit 1
              else
                  echo "âœ… No vulnerabilities were found."
              fi
          else
              echo "âœ… No new endpoints were found to scan."
          fi

      - name: Save current commit SHA for next run
        # This step should always run if the workflow reached this point successfully,
        # to update the state for the next run.
        if: success()
        run: |
          echo "${{ github.sha }}" > last_commit_sha.txt

      - name: Upload current commit SHA as artifact
        # This step should always run if the workflow reached this point successfully.
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: last-scanned-commit
          path: last_commit_sha.txt
          retention-days: 7
