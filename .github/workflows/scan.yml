name: Daily API Change Scanner

on:
  schedule:
    # Run once every day at 03:00 UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  daily-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout latest repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download previous repository state
        run: |
          gh run download --repo ${{ github.repository }} --name previous-repo-state --dir ./previous-state || echo "No previous artifact found, skipping download."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Compare with previous state and get changed files
        id: get_diff
        run: |
          echo "diff_found=false" >> $GITHUB_OUTPUT
          
          if [ -d "./previous-state/previous-repo-state" ]; then
            git diff --name-only HEAD -- ./previous-state/previous-repo-state/ > changed_files.txt
            if [ -s changed_files.txt ]; then
              echo "diff_found=true" >> $GITHUB_OUTPUT
            fi
          else
            find . -name "*.java" > changed_files.txt
            echo "diff_found=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run Endpoint Extractor on changed files
        if: steps.get_diff.outputs.diff_found == 'true'
        run: python scripts/extract_endpoints.py changed_files.txt

      - name: Setup Nuclei and Scan Endpoints
        if: steps.get_diff.outputs.diff_found == 'true'
        run: |
          echo "âœ¨ Installing Nuclei..."
          sudo apt-get update && sudo apt-get install -y wget unzip jq
          wget -q https://github.com/projectdiscovery/nuclei/releases/download/v2.9.8/nuclei_2.9.8_linux_amd64.zip -O nuclei.zip
          unzip nuclei.zip
          sudo mv nuclei /usr/local/bin/

          echo "ðŸš€ Running Nuclei scan on detected endpoints..."
          if [ -s changed_endpoints.json ]; then
              jq -r '.[].path' changed_endpoints.json > urls_for_nuclei.txt
              nuclei -l urls_for_nuclei.txt -silent -o nuclei_results.txt
              
              echo "Nuclei scan complete. Results:"
              if [ -s nuclei_results.txt ]; then
                  cat nuclei_results.txt
                  exit 1
              else
                  echo "âœ… No vulnerabilities were found."
              fi
          else
              echo "âœ… No new endpoints were found to scan."
          fi

      - name: Upload current repository state as artifact for next run
        # This is the crucial fix that prevents the recursive download issue.
        run: |
          # Create a temporary directory to save the new state
          mkdir -p new-repo-state
          
          # Copy only the files you want to keep (the repository's code)
          find . -maxdepth 1 -not -name 'previous-state' -not -name 'new-repo-state' -exec cp -r {} new-repo-state/ \;
          
          # Upload only the new temporary directory's contents
          echo "Uploading clean repository state for next run."
        uses: actions/upload-artifact@v4
        with:
          name: previous-repo-state
          path: new-repo-state
          retention-days: 7
